class sixNetwork(nn.Module):
    def __init__(self, input_size, output_size):
        super(sixNetwork, self).__init__()
        self.fc1 = nn.Linear(input_size, 32)
        self.fc2 = nn.Linear(32, 32)
        self.fc3 = nn.Linear(32, 32)
        self.fc4 = nn.Linear(32, 32)
        self.fc5 = nn.Linear(32, 32)
        self.fc6 = nn.Linear(32, output_size)
        self.relu = nn.ReLU()

    def forward(self, x):
        x = self.relu(self.fc1(x))
        x = self.relu(self.fc2(x))
        x = self.relu(self.fc3(x))
        x = self.relu(self.fc4(x))
        x = self.relu(self.fc5(x))
        x = self.fc6(x)
        return x

test 50000 epochs

Nabla histeresis model:
Test MSE: 0.02638869173824787
Test MAE: 0.09209728986024857
Test MAPE: 61.28228306770325%
Nabla joule model:
Test MSE: 0.04535422846674919
Test MAE: 0.10398630797863007
Test MAPE: 101.10710859298706%
Nabla total model:
Test MSE: 0.03410440310835838
Test MAE: 0.0976564884185791
Test MAPE: 80.58813810348511%